<div class="container">
  <p>Date: <%= @workshop.time%></p>
  <p>Price: <%= number_to_currency(@workshop.price) %></p>
  <p>Date: <%= pretty_date(@workshop.time)%></p>
  <p>Price: $<%= @workshop.price%></p>

  <% if current_user && current_user.admin? %>
    <%= button_to 'Edit Workshop', "/workshops/#{@workshop.id}/edit", method: :get, class: "btn btn-default" %>
    <br>
    <%= button_to "Remove Workshop", "/workshops/#{@workshop.id}", method: :delete, class: "btn btn-danger" %>
  <% end %>
  <br>

  <h1>To register for this class please fill out this form.</h1>
  <div class="col-md-6">
    <%= bootstrap_form_tag url: '/registrants' do |f| %>
      <%= f.text_field :first_name %>
      <%= f.text_field :last_name %>
      <%= f.text_field :affiliation %>
      <%= f.text_field :occupation %>
      <%= f.email_field :email %>
      <%= f.text_field :phone %>
      <%= hidden_field_tag :workshop_id, @workshop.id%>
      <%= f.submit 'Register' %>
    <% end %>
  </div>
  <br>
  <% if current_user && current_user.admin? %>
    <%= link_to('Edit Workshop', "/workshops/#{@workshop.id}/edit") %>
    <%= bootstrap_form_tag url: "/workshops/#{@workshop.id}", method: :delete do |f| %>
      <%= f.submit 'Remove this workshop' %>
    <% end %>
    <br>
  <% end %>
  <% if current_user && current_user.local_school_admin? %>
    <h1>Bulk Import</h1>
    <p><b>Use this function to register multiple users by importing a spreadsheet</b></p>
    <%= bootstrap_form_tag url: "/registrants/import", method: :post, multipart: true do |f| %>
      <%= f.file_field :file %>
      <%= hidden_field_tag :workshop_id, @workshop.id%>
      <%= hidden_field_tag :local_school_id, current_user.local_school_id %>
      <%= f.submit "Import" %>
    <% end %>
  <% end %>
</div>


<!-- <script>
  stripeForm.setStripe()
  stripeForm.createForm()
</script> -->

<script>
// Create a Stripe client
var token = '<%= Rails.configuration.stripe[:publishable_key] %>'
var stripe = Stripe(token);

// Create an instance of Elements
var elements = stripe.elements();

// Custom styling can be passed to options when creating an Element.
// (Note that this demo uses a wider set of styles than the guide below.)
var style = {
  base: {
    color: '#32325d',
    lineHeight: '24px',
    fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
    fontSmoothing: 'antialiased',
    fontSize: '16px',
    '::placeholder': {
      color: '#aab7c4'
    }
  },
  invalid: {
    color: '#fa755a',
    iconColor: '#fa755a'
  }
};

// Create an instance of the card Element
var card = elements.create('card', {style: style});

// Add an instance of the card Element into the `card-element` <div>
card.mount('#card-element');

// Handle real-time validation errors from the card Element.
card.addEventListener('change', function(event) {
  var displayError = document.getElementById('card-errors');
  if (event.error) {
    displayError.textContent = event.error.message;
  } else {
    displayError.textContent = '';
  }
});

// Handle form submission
var form = document.getElementById('payment-form');
form.addEventListener('submit', function(event) {
  event.preventDefault();

  stripe.createToken(card).then(function(result) {
    if (result.error) {
      // Inform the user if there was an error
      var errorElement = document.getElementById('card-errors');
      errorElement.textContent = result.error.message;
    } else {
      // Send the token to your server
      stripeTokenHandler(result.token);
    }
  });
});

function stripeTokenHandler(token) {
  // Insert the token ID into the form so it gets submitted to the server
  var form = document.getElementById('payment-form');
  var hiddenInput = document.createElement('input');
  hiddenInput.setAttribute('type', 'hidden');
  hiddenInput.setAttribute('name', 'stripeToken');
  hiddenInput.setAttribute('value', token.id);
  var amountInput = document.createElement('input');
  amountInput.setAttribute('type', 'hidden');
  amountInput.setAttribute('name', 'amount');
  amountInput.setAttribute('value', $('#payment-amount').val());
  var anonymousInput = document.createElement('input');
  anonymousInput.setAttribute('type', 'hidden');
  anonymousInput.setAttribute('name', 'anonymous');
  if ($('#anonymous-donation').is(':checked')) {
    anonymousInput.setAttribute('value', 'on');
  } else {
    anonymousInput.setAttribute('value', 'off');
  }
  var emailInput = document.createElement('input');
  emailInput.setAttribute('type', 'hidden');
  emailInput.setAttribute('name', 'email');
  emailInput.setAttribute('value', $('#email').val());
  // submit the amount here
  form.appendChild(hiddenInput);
  form.appendChild(amountInput);
  form.appendChild(anonymousInput);
  form.appendChild(emailInput);

  // Submit the form
  form.submit();
}
</script>

