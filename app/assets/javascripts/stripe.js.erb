// I do not believe this is being used anywhere - namespacing for now to remove errors

var stripeForm = (function(){
	var stripe, elements;
	var setStripe = function() {
		stripe = Stripe('<%= Rails.application.secrets.stripe_publishable_key %>');
		elements = stripe.elements();
	}
	// Custom styling can be passed to options when creating an Element.
	var style = {
	  base: {
	    // Add your base input styles here. For example:
	    fontSize: '16px',
	    lineHeight: '24px'
	  }
	};

	var createForm = function() {
		var card = elements.create('card', {style: style});

		// Add an instance of the card Element into the `card-element` <div>
		card.mount('#card-element');

		card.addEventListener('change', function(event) {
			var displayError = document.getElementById('card-errors');
		  if (event.error) {
		    displayError.textContent = event.error.message;
		  } else {
		    displayError.textContent = '';
		  }
		});
		// Create a token or display an error when the form is submitted.
		var form = document.getElementById('payment-form');
		form.addEventListener('submit', function(event) {
		  event.preventDefault();

		  stripe.createToken(card).then(function(result) {
		    if (result.error) {
		      var errorElement = document.getElementById('card-errors');
		      errorElement.textContent = result.error.message;
		    } else {
		      // Send the token to your server
		      stripeTokenHandler(result.token);
		    }
		  });
		});
	}

	function stripeTokenHandler(token) {
	  // Insert the token ID into the form so it gets submitted to the server
	  var form = document.getElementById('payment-form');
	  var hiddenInput = document.createElement('input');
	  hiddenInput.setAttribute('type', 'hidden');
	  hiddenInput.setAttribute('name', 'stripeToken');
	  hiddenInput.setAttribute('value', token.id);
		var hiddenResource = document.createElement('input');
		hiddenResource.setAttribute('type', 'hidden');
		hiddenResource.setAttribute('name', 'resource_id');
		hiddenResource.setAttribute('value', $('#resource_id').val());
	  form.appendChild(hiddenInput);
		form.appendChild(hiddenResource);

	  // Submit the form
	  form.submit();
	}

	return {
		setStripe: setStripe,
		createForm: createForm
	}
})();
